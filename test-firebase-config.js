// –¢–µ—Å—Ç Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const { initializeApp } = require('firebase/app');
const { getFirestore, collection, getDocs } = require('firebase/firestore');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
  apiKey: "AIzaSyAvdGVXFzqU-DrAi3Sw223qyscDuYjKbG0",
  authDomain: "vahta1-76378.firebaseapp.com",
  projectId: "vahta1-76378",
  storageBucket: "vahta1-76378.firebasestorage.app",
  messagingSenderId: "1037943763154",
  appId: "1:1037943763154:web:0e2a2dffc1de4d7279bd0b"
};

async function testFirebase() {
  try {
    console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...');
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π...');
    const snapshot = await getDocs(collection(db, 'vacancies'));

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${snapshot.size} –≤–∞–∫–∞–Ω—Å–∏–π:`);
    snapshot.forEach((doc) => {
      const data = doc.data();
      console.log(`  - ${doc.id}: ${data.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} (${data.company || '–ë–µ–∑ –∫–æ–º–ø–∞–Ω–∏–∏'})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('Stack:', error.stack);
  }
}

testFirebase();
